name: ci
on:
  pull_request:
  push:
    branches:
    - master
  # schedule:
    # - cron: '00 01 * * *'
jobs:
  test:
    name: test
    env:
      # The name of the binary.
      BIN_NAME: aurrs
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - pinned
        - stable
        - beta
        include:
        - build: pinned
          os: ubuntu-18.04
          rust: 1.42.0
        - build: stable
          os: ubuntu-18.04
          rust: stable
        - build: beta
          os: ubuntu-18.04
          rust: beta

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install packages (Ubuntu)
      if: matrix.os == 'ubuntu-18.04'
      run: |
        ci/install-packages-ubuntu.sh

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Build the crate
      run: cargo build --verbose --all

    # This is useful for debugging problems when the expected build artifacts
    # (like shell completions and man pages) aren't generated.
    - name: Show build.rs stderr
      shell: bash
      run: |
        set +x
        stderr="$(find "./target/debug" -name stderr -print0 | xargs -0 ls -t | head -n1)"
        if [ -s "$stderr" ]; then
          echo "===== $stderr ===== "
          cat "$stderr"
          echo "====="
        fi
        set -x

    - name: Run tests
      run: cargo test --verbose --all

    - name: Test for existence of build artifacts
      shell: bash
      run: |
        outdir="$(ci/cargo-out-dir.sh "./target")"
        for f in ${{ env.BIN_NAME }}.1 _${{ env.BIN_NAME }} ${{ env.BIN_NAME }}.bash ${{ env.BIN_NAME }}.fish; do
          # We could use file -E here, but it isn't supported on macOS.
          ls "$outdir/$f" && file "$outdir/$f"
        done

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt
    - name: Check formatting
      run: |
        cargo fmt --all -- --check
